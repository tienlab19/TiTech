//
//  ChatAIViewController.swift
//  TiTech
//
//  Created by Apple on 9/7/24.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ChatAIViewController: BaseViewcontroller {

    // MARK: - Public properties -
    @IBOutlet weak var chatInputView: UIView!
    @IBOutlet weak var chatInputTextField: UITextField!
    
    
    @IBOutlet weak var resultTextResponse: UILabel!

    var presenter: ChatAIPresenterInterface!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setUpUI()
        self.presenter.sendChatRequest(with: "How many countries in the world?")
    }
    
    deinit {
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillShowNotification, object: nil)
        NotificationCenter.default.removeObserver(self, name: UIResponder.keyboardWillHideNotification, object: nil)
    }

}

// MARK: - Extensions -
extension ChatAIViewController: ChatAIViewInterface {
    func didHandleChat(result: String) {
        DispatchQueue.main.async {
            self.resultTextResponse.text = result
        }
    }
}

// MARK: - UI -
extension ChatAIViewController {
    private func setUpUI() {
        self.chatInputView.layer.cornerRadius = 24
        self.chatInputView.clipsToBounds = true
        
        // keyboard listers
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillShow(notification:)), name: UIResponder.keyboardWillShowNotification, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillHide(notification:)), name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    
    @objc func keyboardWillShow(notification: NSNotification) {
        if let keyboardFrame = notification.userInfo?[UIResponder.keyboardFrameEndUserInfoKey] as? CGRect {
            adjustViewAboveKeyboard(show: true, keyboardFrame: keyboardFrame)
        }
    }

    @objc func keyboardWillHide(notification: NSNotification) {
        adjustViewAboveKeyboard(show: false, keyboardFrame: .zero)
    }
    
    func adjustViewAboveKeyboard(show: Bool, keyboardFrame: CGRect) {
        let keyboardHeight = keyboardFrame.height
        let adjustmentHeight = (show ? keyboardHeight : 0)
        
        UIView.animate(withDuration: 0.3) {
            self.view.frame.origin.y = -adjustmentHeight
        }
    }
}

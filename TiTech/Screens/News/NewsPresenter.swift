//
//  NewsPresenter.swift
//  TiTech
//
//  Created by Apple on 10/7/24.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class NewsPresenter {
    
    // MARK: - Private properties -

    private unowned let view: NewsViewInterface
    private let formatter: NewsFormatterInterface
    private let interactor: NewsInteractorInterface
    private let wireframe: NewsWireframeInterface

    // MARK: - Lifecycle -
    var categoryList: [NewCategory] = []
    var listNews: [NewsItem] = []

    init(view: NewsViewInterface, 
         formatter: NewsFormatterInterface,
         interactor: NewsInteractorInterface,
         wireframe: NewsWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension NewsPresenter: NewsPresenterInterface {
    func sendGetCategoryRequest() {
        self.wireframe.showLoading()
        self.interactor.handleGetCategory { [weak self] response in
            guard let strongSelf = self else { return }
            if let data = response?.data {
                strongSelf.categoryList = data
                strongSelf.view.reloadCategoryList()
                strongSelf.sendGetListNews(categoryId: data.first?.id ?? 0)
            }
        }
    }
    
    func sendGetListNews(categoryId: Int) {
        self.interactor.handleGetListNews(categoryId: categoryId) { [weak self] response in
            guard let strongSelf = self else { return }
            strongSelf.listNews = response ?? []
            strongSelf.wireframe.hideLoading()
            self?.view.reloadTableViewContent()
        }
    }
}

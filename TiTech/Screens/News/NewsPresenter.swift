//
//  NewsPresenter.swift
//  TiTech
//
//  Created by Apple on 10/7/24.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import UIKit

final class NewsPresenter {
    
    // MARK: - Private properties -

    private unowned let view: NewsViewInterface
    private let formatter: NewsFormatterInterface
    private let interactor: NewsInteractorInterface
    private let wireframe: NewsWireframeInterface

    // MARK: - Lifecycle -
    var categoryList: [NewCategory] = []
    var listNews: [NewsItem] = []

    init(view: NewsViewInterface, 
         formatter: NewsFormatterInterface,
         interactor: NewsInteractorInterface,
         wireframe: NewsWireframeInterface) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension NewsPresenter: NewsPresenterInterface {
    
    func sendGetCategoryRequest() {
        self.wireframe.showLoading()
        self.interactor.handleGetCategory { [weak self] response in
            guard let strongSelf = self else { return }
            if let data = response?.data {
                strongSelf.categoryList = data
                strongSelf.view.reloadCategoryList()
                strongSelf.interactor.handleGetListNews(categoryId: data.first?.id ?? 0) { [weak self] response in
                    guard let strongSelf = self else { return }
                    strongSelf.listNews = response ?? []
                    strongSelf.wireframe.hideLoading()
                    self?.view.reloadTableViewContent()
                }
            }
        }
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.listNews.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueCell(ofType: NewItem.self, for: indexPath)
        let item = self.listNews[indexPath.row]
        cell.titleBlog.text = item.attributes?.title ?? ""
        cell.titleTag.text = item.attributes?.danhMucTinTuc?.data?.attributes?.title ?? ""
        cell.subSource.text = "Nguồn: " + (item.attributes?.nguonTinTuc?.data?.attributes?.title ?? "")
        cell.thumnailImage.setImageWith(imageUrl: item.attributes?.image?.data?.attributes?.formats?.thumbnail?.url ?? "")
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        guard let data = self.listNews[indexPath.row].attributes?.urlDanLinkLienKet else { return }
        self.wireframe.openNewDetail(url: data)
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return self.categoryList.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeuCell(ofType: FilterCell.self, for: indexPath)
        cell.title = self.categoryList[indexPath.item].attributes?.title ?? ""
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        self.wireframe.showLoading()
        self.interactor.handleGetListNews(categoryId: self.categoryList[indexPath.item].id ?? 0) { [weak self] response in
            guard let strongSelf = self else { return }
            strongSelf.listNews = response ?? []
            strongSelf.wireframe.hideLoading()
            self?.view.reloadTableViewContent()
        }
    }
}

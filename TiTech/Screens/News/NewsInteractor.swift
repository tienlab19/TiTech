//
//  NewsInteractor.swift
//  TiTech
//
//  Created by Apple on 10/7/24.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class NewsInteractor {
    private let service: NewServiceProtocols
    
    init(service: NewServiceProtocols) {
        self.service = service
    }
}

// MARK: - Extensions -
extension NewsInteractor: NewsInteractorInterface {
    func handleGetCategory(completion: @escaping (CategoryResponse?) -> Void) {
        self.service.getNewCategory { result in
            switch result {
            case .success(let response):
                if let data = response {
                    completion(data)
                } else {
                    completion(nil)
                }
            case .failure:
                completion(nil)
            }
        }
    }
    
    func handleGetListNews(categoryId: Int, completion: @escaping ([NewsItem]?) -> Void) {
        self.service.getListNews(categoryIds: categoryId) { result in
            switch result {
            case .success(let response):
                if let data = response {
                    completion(data.data)
                } else {
                    completion(nil)
                }
            case .failure:
                completion(nil)
            }
        }
    }
}

//
//  NewsViewController.swift
//  TiTech
//
//  Created by Apple on 10/7/24.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class NewsViewController: BaseViewcontroller {
    
    // MARK: - Public properties -
    @IBOutlet weak var filter_coll: UICollectionView!
    @IBOutlet weak var new_table: UITableView!
    
    var presenter: NewsPresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setInitUICollectionView()
        self.setUpInitTableView()
        self.presenter.sendGetCategoryRequest()
    }
}

// MARK: - Extensions -

extension NewsViewController: NewsViewInterface {
    func reloadTableViewContent() {
        DispatchQueue.main.async {
            self.new_table.reloadData()
            self.new_table.scrollToTop(animated: true)
        }
    }
    
    func reloadCategoryList() {
        DispatchQueue.main.async {
            self.filter_coll.reloadData()
            self.filter_coll.selectItem(at: IndexPath(item: 0, section: 0), animated: true, scrollPosition: .centeredHorizontally)
            DispatchQueue.main.asyncAfter(deadline: .now() + 0) {
                self.filter_coll.selectItem(at: IndexPath(item: 0, section: 0), animated: true, scrollPosition: .centeredHorizontally)
            }
        }
    }
}

//MARK: - UICollectionViewDataSource
extension NewsViewController: UICollectionViewDataSource {
    private func setInitUICollectionView() {
        self.filter_coll.contentInset = UIEdgeInsets(top: 0, left: 16, bottom: 0, right: 16)
        self.filter_coll.registerNib(ofType: FilterCell.self)
        self.filter_coll.delegate = self
        self.filter_coll.dataSource = self
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return self.presenter.categoryList.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeuCell(ofType: FilterCell.self, for: indexPath)
        cell.title = self.presenter.categoryList[indexPath.item].attributes?.title ?? ""
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        self.presenter.sendGetListNews(categoryId: self.presenter.categoryList[indexPath.row].id ?? 0)
    }
}

// MARK: - UICollectionViewDelegateFlowLayout
extension NewsViewController: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let cellHeight: CGFloat = 32
        let padding: CGFloat = 10
        let item = self.presenter.categoryList[indexPath.item].attributes?.title ?? ""
        return CGSize(width: item.width(withConstrainedHeight: padding * 2, font: UIFont.systemFont(ofSize: 14)), height: cellHeight)
    }
}

//MARK: - UITableViewDelegate -
extension NewsViewController: UITableViewDelegate {
    private func setUpInitTableView() {
        self.new_table.registerNib(ofType: NewItem.self)
        self.new_table.separatorStyle = .none
        self.new_table.dataSource = self
        self.new_table.delegate = self
        self.new_table.rowHeight = UITableView.automaticDimension
    }
     
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.new_table.deselectRow(at: indexPath, animated: true)
        guard let data = self.presenter.listNews[indexPath.row].attributes?.urlDanLinkLienKet else { return }
        self.presenter.sendGoToNewDetailRequest(url: data)
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return self.new_table.frame.height / 6
    }
}

//MARK: - UITableViewDataSource -
extension NewsViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.presenter.listNews.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = self.new_table.dequeueCell(ofType: NewItem.self, for: indexPath)
        let item = self.presenter.listNews[indexPath.row]
        cell.titleBlog.text = item.attributes?.title ?? ""
        cell.titleTag.text = item.attributes?.danhMucTinTuc?.data?.attributes?.title ?? ""
        cell.subSource.text = "Nguồn: " + (item.attributes?.nguonTinTuc?.data?.attributes?.title ?? "")
        cell.thumnailImage.setImageWith(imageUrl: item.attributes?.image?.data?.attributes?.formats?.thumbnail?.url ?? "")
        return cell
    }
}
